id: CVE-2021-24340
info:
  name: WordPress Plugin WP Statistics < 13.0.8 - Unauthenticated Time-Based Blind
    SQL Injection
  author:
  - l0ne1y
  description: |-
    WordPress Plugin Statistics  SQL注入漏洞
    WordPress是Wordpress基金会的一套使用PHP语言开发的博客平台。该平台支持在PHP和MySQL的服务器上架设个人博客网站。WordPress 插件是WordPress开源的一个应用插件。

    Wordpress Statistics 存在SQL注入漏洞，该漏洞允许远程攻击者在数据库中执行任意SQL查询。以下产品及版本受影响：WP Statistics 1.0、2.0、2.1、2.1.1、2.1.2、2.1.3、2.1.4、2.1.5、2.1.6、2.2.0、2.2.1、2.2.2、2.2.3、2.2.4、2.2.5、2.2.6、2.2.7、2.2。
  severity: high
  remediation: |-
    官方修复方案：
    1、目前厂商已发布升级补丁以修复漏洞，补丁获取链接：https://www.wordfence.com/blog/2021/05/over-600000-sites-impacted-by-wp-statistics-patch/

    临时修复方案：
    1、使用预编译语句，使用PDO需要注意不要将变量直接拼接到PDO语句中。所有的查询语句都使用数据库提供的参数化查询接口，参数化的语句使用参数而不是将用户输入变量嵌入到SQL语句中。当前几乎所有的数据库系统都提供了参数化SQL语句执行接口，使用此接口可以非常有效的防止SQL注入攻击。
    2、对进入数据库的特殊字符（’”<>&*;等）进行转义处理，或编码转换。
    3、确认每种数据的类型，比如数字型的数据就必须是数字，数据库中的存储字段必须对应为int型。
    4、数据长度应该严格规定，能在一定程度上防止比较长的SQL注入语句无法正确执行。
    5、网站每个数据层的编码统一，建议全部使用UTF-8编码，上下层编码不一致有可能导致一些过滤模型被绕过。
    6、严格限制网站用户的数据库的操作权限，给此用户提供仅仅能够满足其工作的权限，从而最大限度的减少注入攻击对数据库的危害。
    7、避免网站显示SQL错误信息，比如类型错误、字段不匹配等，防止攻击者利用这些错误信息进行一些判断。
    8、过滤危险字符，例如：采用正则表达式匹配union、sleep、and、select、load_file等关键字，如果匹配到则终止运行。
requests:
- matchers:
  - type: status
    status:
    - 200
  - type: word
    part: body
    words:
    - WP Statistics
  - type: dsl
    dsl:
    - compare_versions(version, '< 13.0.8')
  extractors:
  - name: version
    type: regex
    regex:
    - '(?m)Stable tag: ([0-9.]+)'
    group: 1
    internal: true
  - type: regex
    regex:
    - '(?m)Stable tag: ([0-9.]+)'
    group: 1
  matchers-condition: and
  path:
  - '{{BaseURL}}/wp-content/plugins/wp-statistics/readme.txt'
  method: GET
