# nuclei config file
# generated by https://github.com/projectdiscovery/goflags

# target urls/hosts to scan
#target: []

# path to file containing a list of target urls/hosts to scan (one per line)
#list: 

# resume scan using resume.cfg (clustering will be disabled)
#resume: 

# run only new templates added in latest nuclei-templates release
#new-templates: false

# run new templates added in specific version
#new-templates-version: 

# automatic web scan using wappalyzer technology detection to tags mapping
#automatic-scan: false

# list of template or template directory to run (comma-separated, file)
#templates: 

# list of template urls to run (comma-separated, file)
#template-url: 

# list of workflow or workflow directory to run (comma-separated, file)
#workflows: 

# list of workflow urls to run (comma-separated, file)
#workflow-url: 

# validate the passed templates to nuclei
#validate: false

# disable strict syntax check on templates
#no-strict-syntax: false

# list all available templates
#tl: false

# allowed domain list to load remote templates from
#remote-template-domain: ["api.nuclei.sh"]

# templates to run based on authors (comma-separated, file)
#author: 

# templates to run based on tags (comma-separated, file)
#tags: 

# templates to exclude based on tags (comma-separated, file)
#exclude-tags: 

# tags to be executed even if they are excluded either by default or configuration
#include-tags: 

# templates to run based on template ids (comma-separated, file)
#template-id: 

# templates to exclude based on template ids (comma-separated, file)
#exclude-id: 

# templates to be executed even if they are excluded either by default or configuration
#include-templates: 

# template or template directory to exclude (comma-separated, file)
#exclude-templates: 

# template matchers to exclude in result
#exclude-matchers: 

# templates to run based on severity. possible values: info, low, medium, high, critical, unknown
#severity: 

# templates to exclude based on severity. possible values: info, low, medium, high, critical, unknown
#exclude-severity: 

# templates to run based on protocol type. possible values: dns, file, http, headless, network, workflow, ssl, websocket, whois
#type: 

# templates to exclude based on protocol type. possible values: dns, file, http, headless, network, workflow, ssl, websocket, whois
#exclude-type: 

# output file to write found issues/vulnerabilities
#output: 

# store all request/response passed through nuclei to output directory
#store-resp: false

# store all request/response passed through nuclei to custom directory
#store-resp-dir: output

# display findings only
#silent: false

# disable output content coloring (ansi escape codes)
#no-color: false

# write output in jsonl(ines) format
#json: false

# include request/response pairs in the jsonl output (for findings only)
#include-rr: false

# disable printing result metadata in cli output
#no-meta: false

# disable printing timestamp in cli output
#no-timestamp: false

# nuclei reporting database (always use this to persist report data)
#report-db: 

# display match failure status
#matcher-status: false

# directory to export results in markdown format
#markdown-export: 

# file to export results in sarif format
#sarif-export: 

# path to the nuclei configuration file
#config: 

# enable following redirects for http templates
#follow-redirects: false

# max number of redirects to follow for http templates
#max-redirects: 10

# disable redirects for http templates
#disable-redirects: false

# nuclei reporting module configuration file
#report-config: 

# custom header/cookie to include in all http request in header:value format (cli, file)
#header: 

# custom vars in key=value format
#var: 

# file containing resolver list for nuclei
#resolvers: 

# use system dns resolving as error fallback
#system-resolvers: false

# enable passive http response processing mode
#passive: false

# enable environment variables to be used in template
#env-vars: false

# client certificate file (pem-encoded) used for authenticating against scanned hosts
#client-cert: 

# client key file (pem-encoded) used for authenticating against scanned hosts
#client-key: 

# client certificate authority file (pem-encoded) used for authenticating against scanned hosts
#client-ca: 

# show match lines for file templates, works with extractors only
#show-match-line: false

# use ztls library with autofallback to standard one for tls13
#ztls: false

# tls sni hostname to use (default: input domain name)
#sni: 

# interactsh server url for self-hosted instance (default: oast.pro,oast.live,oast.site,oast.online,oast.fun,oast.me)
#interactsh-server: 

# authentication token for self-hosted interactsh server
#interactsh-token: 

# number of requests to keep in the interactions cache
#interactions-cache-size: 5000

# number of seconds to wait before evicting requests from cache
#interactions-eviction: 60

# number of seconds to wait before each interaction poll request
#interactions-poll-duration: 5

# extra time for interaction polling before exiting
#interactions-cooldown-period: 5

# disable interactsh server for oast testing, exclude oast based templates
#no-interactsh: false

# maximum number of requests to send per second
#rate-limit: 150

# maximum number of requests to send per minute
#rate-limit-minute: 0

# maximum number of hosts to be analyzed in parallel per template
#bulk-size: 25

# maximum number of templates to be executed in parallel
#concurrency: 25

# maximum number of headless hosts to be analyzed in parallel per template
#headless-bulk-size: 10

# maximum number of headless templates to be executed in parallel
#headless-concurrency: 10

# time to wait in seconds before timeout
#timeout: 5

# number of times to retry a failed request
#retries: 1

# leave default http/https ports (eg. host:80,host:443
#leave-default-ports: false

# max errors for a host before skipping from scan
#max-host-error: 30

# use a project folder to avoid sending same request multiple times
#project: false

# set a specific project path
#project-path: /var/folders/_l/pnb2t_9s0f192bqlz1348vpr0000gn/T/

# stop processing http requests after the first match (may break template/workflow logic)
#stop-at-first-path: false

# stream mode - start elaborating without sorting the input
#stream: false

# timeout on input read
#input-read-timeout: 

# disable stdin processing
#no-stdin: false

# enable templates that require headless browser support (root user on linux will disable sandbox)
#headless: false

# seconds to wait for each page in headless mode
#page-timeout: 20

# show the browser on the screen when running templates with headless mode
#show-browser: false

# use local installed chrome browser instead of nuclei installed
#system-chrome: false

# show all requests and responses
#debug: false

# show all sent requests
#debug-req: false

# show all received responses
#debug-resp: false

# list of http/socks5 proxy to use (comma separated or file input)
#proxy: []

# proxy all internal requests
#proxy-internal: false

# file to write sent requests trace log
#trace-log: 

# file to write sent requests error log
#error-log: 

# show nuclei version
#version: false

# enable nuclei hang monitoring
#hang-monitor: false

# show verbose output
#verbose: false

# display templates loaded for scan
#vv: false

# enable pprof debugging server
#enable-pprof: false

# shows the version of the installed nuclei-templates
#templates-version: false

# run diagnostic check up
#health-check: false

# update nuclei engine to the latest released version
#update: false

# update nuclei-templates to latest released version
#update-templates: false

# overwrite the default directory to install nuclei-templates
#update-directory: 

# disable automatic nuclei/templates update check
#disable-update-check: false

# display statistics about the running scan
#stats: false

# write statistics data to an output file in jsonl(ines) format
#stats-json: false

# number of seconds to wait between showing a statistics update
#stats-interval: 5

# expose nuclei metrics on a port
#metrics: false

# port to expose nuclei metrics on
#metrics-port: 9092